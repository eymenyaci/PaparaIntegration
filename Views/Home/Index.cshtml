@using PaparaIntegration.Models;
@model LedgerViewModel
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .icon-image {
            max-width: 50px;
        }

        .accordion-item {
            border: 1px solid rgba(0, 0, 0, .125);
            border-radius: .25rem;
            margin-bottom: 10px;
        }

        .accordion-header {
            background-color: #f8f9fa;
            border-bottom: 1px solid rgba(0, 0, 0, .125);
            padding: 10px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            font-size: 14px;
        }

        .accordion-header:hover {
            background-color: #e9ecef;
        }

        .accordion-body {
            padding: 10px;
        }

        .table td,
        .table th {
            font-size: 12px;
            padding: 0.5rem;
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="accordion" id="accordionTable">

            <div class="accordion-item">
                <h2 class="accordion-header" id="headingTable2">
                    <button class="accordion-button" type="button" onclick="toggleTable2()">
                        PaymentLedgers
                    </button>
                </h2>
                <div id="collapseTable2" class="accordion-collapse collapse show" aria-labelledby="headingTable2"
                    data-bs-parent="#accordionTable">
                    <div class="accordion-body">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th>Papara Payment Id</th>
                                    <th>Checkout Payment Reference ID</th>
                                    <th>Entry Type Name</th>
                                    <th>Amount</th>
                                    <th>Fee</th>
                                    <th>Net Amount</th>
                                    <th>Currency</th>
                                    <th>Resulting Balance</th>
                                    <th>Description</th>
                                    <th>Description Title</th>
                                    <th>Created At</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model?.PaymentLedgers?.data?.items != null && Model.PaymentLedgers.data.items.Any())
                                {
                                    @foreach (var item in Model.PaymentLedgers.data.items)
                                    {
                                        <tr>
                                            <td><img src="@item.iconUrl" class="icon-image" alt="Icon"></td>
                                            <td>@item.checkoutPaymentId</td>
                                            <td>@item.checkoutPaymentReferenceId</td>
                                            <td>@item.entryTypeName</td>
                                            <td>@item.amount</td>
                                            <td>@item.fee</td>
                                            <td>@item.netAmount</td>
                                            <td>@item.currencyInfo.symbol</td>
                                            <td>@item.resultingBalance</td>
                                            <td>@item.description</td>
                                            <td>@item.descriptionTitle</td>
                                            <td>@item.createdAt</td>
                                            @{
                                                int paymentIdCount = Model.PaymentLedgers.data.items.Where(x => x.checkoutPaymentId
                                                == item.checkoutPaymentId).Count();
                                                if (item.amount > 0)
                                                {
                                                    <td>
                                                        <button type="button" class="btn btn-info"
                                                            onclick="RefundPayment('@item.checkoutPaymentId', '@item.amount')">Refund</button>

                                                    </td>
                                                }
                                                else if (item.amount < 0 || paymentIdCount == 2)
                                                {
                                                    <td>
                                                        <span style="color: red; font-weight: bold;">Refunded</span>
                                                    </td>
                                                }

                                            }

                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="11">No data available</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <div class="accordion-item">
                <h2 class="accordion-header" id="headingTable">
                    <button class="accordion-button" type="button" onclick="toggleTable()">
                        MassPayments
                    </button>
                </h2>
                <div id="collapseTable" class="accordion-collapse collapse show" aria-labelledby="headingTable"
                    data-bs-parent="#accordionTable">
                    <div class="accordion-body">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th>Mass Payment ID</th>
                                    <th>Entry Type Name</th>
                                    <th>Amount</th>
                                    <th>Fee</th>
                                    <th>Net Amount</th>
                                    <th>Currency</th>
                                    <th>Resulting Balance</th>
                                    <th>Description</th>
                                    <th>Description Title</th>
                                    <th>Created At</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model?.PayoutLedgers?.data?.items != null && Model.PayoutLedgers.data.items.Any(x => x.entryType == 9))
                                {
                                    @foreach (var item in Model.PayoutLedgers.data.items.Where(x => x.entryType == 9))
                                    {
                                        <tr>
                                            <td><img src="@item.iconUrl" class="icon-image" alt="Icon"></td>
                                            <td>@item.massPaymentId</td>
                                            <td>@item.entryTypeName</td>
                                            <td>@item.amount</td>
                                            <td>@item.fee</td>
                                            <td>@item.netAmount</td>
                                            <td>@item.currencyInfo.symbol</td>
                                            <td>@item.resultingBalance</td>
                                            <td>@item.description</td>
                                            <td>@item.descriptionTitle</td>
                                            <td>@item.createdAt</td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="11">No data available</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function toggleTable() {
            var collapseTable = document.getElementById("collapseTable");
            var btnText = document.querySelector("#headingTable .accordion-button");

            if (collapseTable.classList.contains("show")) {
                collapseTable.classList.remove("show");
                btnText.innerText = "Show MassPayments";
            } else {
                collapseTable.classList.add("show");
                btnText.innerText = "MassPayments";
            }
        }

        function toggleTable2() {
            var collapseTable2 = document.getElementById("collapseTable2");
            var btnText = document.querySelector("#headingTable2 .accordion-button");

            if (collapseTable2.classList.contains("show")) {
                collapseTable2.classList.remove("show");
                btnText.innerText = "Show PaymentLedgers";
            } else {
                collapseTable2.classList.add("show");
                btnText.innerText = "PaymentLedgers";
            }
        }

        function RefundPayment(checkoutPaymentId, amount) {
            var requestData = {
                PaymentId: String(checkoutPaymentId),
                RefundAmount: parseFloat(amount)
            };

            fetch('/Payment/Refund', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(requestData)
            })
                .then(response => response.json())
                .then(data => {
                    if (!data.succeeded) {
                        if (data.error && data.error.message) {
                            throw new Error(data.error.message);
                        } else {
                            throw new Error('İstek başarısız!');
                        }
                    }
                    console.log('Ödeme iade edildi!');
                    console.log(requestData);
                })
                .catch(error => {
                    console.error('Ödeme iade edilirken bir hata oluştu:', error.message);
                    console.log(requestData);
                    var errorMessage = error.message.replace(/(?:\r\n|\r|\n)/g, '<br>'); 
                    alert('Hata: ' + errorMessage);
                });
        }




    </script>
</body>

</html>
